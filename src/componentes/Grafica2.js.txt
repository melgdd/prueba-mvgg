import React, { useState, useRef, useEffect } from 'react';
import * as d3 from 'd3';
import {baseIdentificacion} from '../docs/data.ts';


function Grafica(props){
    
    //const [data] = useState([25, 50, 35, 15, 94, 10]);
    const [data] = baseIdentificacion;
    const svgRef = useRef();

    useEffect(() => {
        // Setting up svg
        const w = 800;
        const h = 200;
        const svg = d3.select(svgRef.current)
            .attr('width', w)
            .attr('height', h)
            .style('background', '#CFD0D4')
            .style('margin-top', '50')
            .style('overflow', 'visible');

        // Setting scale
        const xScale = d3.scaleLinear()
            .domain([0, data.length - 1])
            .range([0, w]);
        const yScale = d3.scaleLinear()
            .domain([0, h])
            .range([h, 0]);
        const generateScaleLine = d3.line()
            .x((d, i) => xScale(i))
            .y(yScale)
            .curve(d3.curveCardinal);
        // Setting Axes
        const xAxis = d3.axisBottom(xScale)
            .ticks(data.length)
            .tickFormat(i => i + 1);
        const yAxis = d3.axisLeft(yScale)
            .ticks(5);
        svg.append('g')
            .call(xAxis)
            .attr('transform', `translate(0,  ${h})`);
        svg.append('g')
            .call(yAxis);

        // Setting up the data
        svg.selectAll('.line')
            .data([data])
            .join('path')
                .attr('d', d => generateScaleLine(d))
                .attr('fill', 'none')
                .attr('stroke', 'black');
    }, [data]);

  return(
    <div >
        <h2>
            Datos a lo largo de los trimestres
        </h2>
        <div className='contenedor-grafica'>
            <svg ref={svgRef}></svg>
        </div>
    </div>
  );
  }
  
  export default Grafica;